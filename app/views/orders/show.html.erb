<div class="container">
  <div class="row mt-5">
    <div class="col-12">
      <h3>注文内容を確認・変更する</h3>
      <% @order.order_items.each do |item| %>
      <div class="card mt-4">
        <div class="card-body">
          <h5 class="card-title"><%= item.cosmetic.product_name %></h5>
          <h6 class="card-subtitle mb-2 text-muted"><%= item.cosmetic.company_name %></h6>
          <p class="card-text">数量 : <%= item.quantity %></p>
          <a href="#" class="card-link">変更</a>
          <a href="#" class="card-link">削除</a>
          <p class="card-text">価格 : <%= price_to_currency(item) %></p>
        </div>
      </div>
      <% end %>
    </div>
  </div>

  <div class="row mt-5">
    <div class="col-12">
      <h3>お届け先住所</h3>
      <form action="/orders/<%= @order.id %>/payments" method="POST" id="order_info_form">
        <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
        <input type="hidden" name="payer_id" id="payer_id">
        <input type="hidden" name="merchant_id" id="merchant_id">
        <input type="hidden" name="amount_value" id="amount_value">
        <input type="hidden" name="status" id="status">
        <input type="hidden" name="msg" id="msg">
        <input type="hidden" name="resultFlg" id="resultFlg">

        <div class="form-group mt-2">
          <label for="">氏名</label>
          <input type="text" class="form-control" id="name" name="name">
        </div>

        <div class="form-group mt-2">
          <label for="">郵便番号 </label>
          <input type="text" class="form-control" id="phone">
        </div>

        <div class="form-group mt-2">
          <label for="">Eメール</label>
          <input type="text" class="form-control" id="email">
        </div>

        <div class="form-group mt-2">
          <label for="" class="d-block">住所</label>
          <input type="text" class="form-control mt-2" name="zipcode" maxlength="9" type="tel"
            onchange="javascript:getAddName(this.value)" placeholder="郵便番号">
          <input type="text" class="form-control mt-2" id="add_name" name="address" placeholder="住所1">
          <input type="text" class="form-control mt-2" id="adress_1" name="adress_1" placeholder="住所2">
        </div>
      </form>
    </div>
  </div>

  <div class="row mt-5">
    <div class="col-12">
      <h3>領収書/購入明細書</h3>
      <div class="card">
        <div class="card-body">
          <div class="d-flex justify-content-between">
            <h5 class="card-title">商品の小計</h5>
            <p class="card-text"><%= number_to_currency(@order.product_price) %></p>
          </div>
          <div class="d-flex justify-content-between mt-3">
            <h5 class="card-title">配送料・手数料</h5>
            <p class="card-text"><%= number_to_currency(@order.shipping_fee) %></p>
          </div>
        </div>
        <div class="card-footer">
          <div class="d-flex justify-content-between mt-3">
            <h5 class="card-title">ご請求額</h5>
            <p id="total_price" class="card-text"><%= number_to_currency(@order.total_price) %></p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="row my-5">
    <div class="col-12">
      <div id="smart-button-container">
        <div style="text-align: center;">
          <div id="paypal-button-container"></div>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="https://www.paypal.com/sdk/js?client-id=sb&currency=JPY" data-sdk-integration-source="button-factory">
</script>
<script>
  $(document).ready(function () {
    if (self.name != 'reload') {
      self.name = 'reload';
      self.location.reload(true);
    } else self.name = '';
  });

  function initPayPalButton() {
    paypal.Buttons({
      style: {
        shape: 'rect',
        color: 'gold',
        layout: 'vertical',
        label: 'pay',

      },

      createOrder: function (data, actions) {
        return actions.order.create({
          purchase_units: [{
            "amount": {
              "currency_code": "JPY",
              "value": <%= @order.total_price %>
            }
          }]
        });
      },

      onApprove: function (data, actions) {
        return actions.order.capture().then(function (details) {
          var resultFlg = "000"
          var message = details.payer.name.given_name + ' 様の決済が正常に完了しました。';

          $("#payer_id").val(details.payer.payer_id)
          $("#merchant_id").val(details.purchase_units[0].payee.merchant_id)
          $("#amount_value").val(details.purchase_units[0].amount.value)
          $("#status").val(details.status)
          $("#msg").val(message)
          $("#resultFlg").val(resultFlg)
          $("#order_info_form").submit()

          alert(message);
        });
      },

      onCancel: function () {
        var resultFlg = "001"
        var message = "お客様のお支払いはキャンセルされました。";

        $("#msg").val(message)
        $("#resultFlg").val(resultFlg)
        $("#order_info_form").submit()

        alert(message);
      },

      onError: function (err) {
        var resultFlg = "002"
        var message = "お客様のお支払いは失敗しました。";

        $("#msg").val(message)
        $("#resultFlg").val(resultFlg)
        $("#order_info_form").submit()

        console.log(err);
        alert(message);
      }
    }).render('#paypal-button-container');
  }
  initPayPalButton();
</script>
<script>
  // 住所検索（郵便番号利用）
  var getAddName = function ($addNum) {
    var _zipcloudAPI = document.body.appendChild(document.createElement("script"));
    _zipcloudAPI.src = "http://zipcloud.ibsnet.co.jp/api/search?zipcode=" + $addNum +
      "&callback=getAddNameByZipcloudAPI";
    document.body.removeChild(_zipcloudAPI);
  };
  var getAddNameByZipcloudAPI = function ($getAdd) {
    var _addFormatted = "";
    if ($getAdd.status == 200) {
      _addFormatted += $getAdd.results[0].address1; // 都道府県名
      _addFormatted += $getAdd.results[0].address2; // 市町村名
      _addFormatted += $getAdd.results[0].address3; // 町域名
    }
    document.getElementById("add_name").value = _addFormatted;
  };
</script>